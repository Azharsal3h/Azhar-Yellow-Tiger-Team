menu = {
    'Pizza': 2.99,
    'Burger': 3.99,
    'Hot dog': 1.99,
    'Cheese': 0.59,
    'Churro': 1.49,
    'Soda': 0.89,
    'Ice cream': 0.89
}

def total_price(item1_name, item2_name):
    if item1_name not in menu:
        print(f"Oops! '{item1_name}' is not on the menu.")
        return None
    if item2_name not in menu:
        print(f"Oops! '{item2_name}' is not on the menu.")
        return None
    return menu[item1_name] + menu[item2_name]

def price_difference(item1_name, item2_name):
    if item1_name not in menu:
        print(f"Oops! '{item1_name}' is not on the menu.")
        return None
    if item2_name not in menu:
        print(f"Oops! '{item2_name}' is not on the menu.")
        return None
    return abs(menu[item1_name] - menu[item2_name])

def total_price_string(item1_name, item2_name):
    total = total_price(item1_name, item2_name)
    if total is None:
        return "Could not calculate total â€” one or more items were not found."
    return f"The total price of {item1_name} and {item2_name} is ${total:.2f}"

def inflation(current_menu, item_name, multiplier):
    if item_name in current_menu:
        current_menu[item_name] *= multiplier
    else:
        print(f"Whoops! '{item_name}' isn't on the menu to apply inflation.")
    return current_menu

def deflation(current_menu, item_name, divisor):
    if item_name in current_menu:
        if divisor != 0:
            current_menu[item_name] /= divisor
        else:
            print("Error: Can't divide by zero! Price not changed.")
    else:
        print(f"Whoops! '{item_name}' isn't on the menu to apply deflation.")
    return current_menu

def item_cost_for_two(current_menu, item_name):
    if item_name not in current_menu:
        print(f"Oops! '{item_name}' is not on the menu.")
        return None
    price = current_menu[item_name]
    # Use float floor division correctly for half price
    second_item_price = price // 2 if isinstance(price, int) else float(int(price / 2))
    total_cost = price + second_item_price
    return f"Buying two '{item_name}' would cost ${total_cost:.2f} (second item half price)."


print("--- Demonstrating Functions ---")

print("\nCalculating total prices:")
result = total_price('Pizza', 'Burger')
if result is not None:
    print(f"Pizza + Burger: ${result:.2f}")
result = total_price('Churro', 'Soda')
if result is not None:
    print(f"Churro + Soda: ${result:.2f}")
print(f"Trying total for Pizza + Taco (Taco is missing): {total_price('Pizza', 'Taco')}")

print("\nCalculating price differences:")
result = price_difference('Pizza', 'Burger')
if result is not None:
    print(f"Difference between Pizza and Burger: ${result:.2f}")
result = price_difference('Burger', 'Pizza')
if result is not None:
    print(f"Difference between Burger and Pizza: ${result:.2f}")
print(f"Trying difference for Ice cream + Taco (Taco is missing): {price_difference('Ice cream', 'Taco')}")

print("\nTesting formatted output:")
print(total_price_string('Burger', 'Cheese'))
print(total_price_string('Pizza', 'Fries'))  # Fries is not on menu

print("\nTesting inflation and deflation:")
menu_copy_for_tests = menu.copy()
print(f"Original Pizza price: ${menu_copy_for_tests['Pizza']:.2f}")
inflation(menu_copy_for_tests, 'Pizza', 1.10)
print(f"Pizza price after 10% inflation: ${menu_copy_for_tests['Pizza']:.2f}")

print(f"Original Burger price: ${menu_copy_for_tests['Burger']:.2f}")
deflation(menu_copy_for_tests, 'Burger', 1.20)
print(f"Burger price after 20% deflation: ${menu_copy_for_tests['Burger']:.2f}")

inflation(menu_copy_for_tests, 'Taco', 1.50)  # Item not on menu
deflation(menu_copy_for_tests, 'Soda', 0)     # Division by zero

print("\nTesting custom function (item_cost_for_two):")
print(item_cost_for_two(menu, 'Hot dog'))
print(item_cost_for_two(menu, 'Ice cream'))
print(item_cost_for_two(menu, 'Fries'))  # Fries is missing
